@import 'icons.scss';
@import 'body.scss';
@import 'input.scss';
@import 'button.scss';
@import 'form.scss';
@import 'variables.scss';
@import 'nav/navfixed.scss';
@import 'nav/footer.scss';
@import 'grid.scss';
@import 'scrollbar.scss';
@mixin generateSize ($size, $name) {
    .w-#{$name} {
        width: 100%;
        max-width: $size;
    }
    .h-#{$name} {
        height: $size;
    }
    .w-full-#{$name} {
        width: calc(100% - #{$size});
    }
    .h-full-#{$name} {
        height: calc(100% - #{$size});
    }
}

@mixin generatePosition ($position) {
    .ps-#{$position} {
        position: $position;
    }
}

@mixin generateHeaderHeight ($height, $name) {
    .header-#{$name} {
        height: $height;
    }
}

@mixin generateFontSize($fs, $name) {
    .fs-#{$name} {
        font-size: $fs;
    }
}

@mixin generateMarginPadding ($posi, $level, $size) {
    .m#{$posi}-#{$level} {
        @if $posi=="t" {
            margin-left: $size;
        }
        @else if $posi=="l" {
            margin-left: $size;
        }
        @else if $posi=="r" {
            margin-right: $size;
        }
        @else if $posi=="b" {
            margin-bottom: $size;
        }
        @else if $posi=="lr" {
            margin-left: $size;
            margin-right: $size;
        }
        @else if $posi=="tb" {
            margin-top: $size;
            margin-bottom: $size;
        }
        @else {
            margin: $size;
        }
    }
    .p#{$posi}-#{$level} {
        @if $posi=="t" {
            padding-left: $size;
        }
        @else if $posi=="l" {
            padding-left: $size;
        }
        @else if $posi=="r" {
            padding-right: $size;
        }
        @else if $posi=="b" {
            padding-bottom: $size;
        }
        @else if $posi=="lr" {
            padding-left: $size;
            padding-right: $size;
        }
        @else if $posi=="tb" {
            padding-top: $size;
            padding-bottom: $size;
        }
        @else {
            padding: $size;
        }
    }
    .b#{$posi}-#{$level} {
        @if $posi=="t" {
            border-left-width: $level + px !important;
        }
        @else if $posi=="l" {
            border-left-width: $level + px !important;
        }
        @else if $posi=="r" {
            border-right-width: $level + px !important;
        }
        @else if $posi=="b" {
            border-bottom-width: $level + px !important;
        }
        @else if $posi=="lr" {
            border-left-width: $level + px !important;
            border-right-width: $level + px !important;
        }
        @else if $posi=="tb" {
            border-top-width: $level + px !important;
            border-bottom-width: $level + px !important;
        }
        @else {
            border-width: $level + px !important;
        }
    }
}

@mixin btnSize($fs, $name) {
    .btn-#{$name} {
        font-size: $fs;
    }
}

@mixin btnColor($hostcl, $subcl, $name) {
    .btn-#{$name} {
        background-color: $cl;
        color: $subcl;
    }
    .btn-outline-#{$name} {
        color: $cl;
        border: solid 2px $cl;
        background-color: $subcl;
    }
}

@include generateSize(100%, "full");
@include generateSize(50%, "50p");
@include generateSize(25%, "25p");
@include generateSize(12.5%, "12-5p");
@include generateSize(600px, "600px");
@include generateSize(800px, "800px");
@include generateSize(1000px, "1000px");
@include generateSize(500px, "500px");
@include generateSize(400px, "400px");
@include generateSize(300px, "300px");
@include generateSize(64px, "64px");
@include generatePosition(fixed);
@include generatePosition(absolute);
@include generatePosition(relative);
@each $_val in $defines {
    @include generateSize(nth($_val, 2), nth($_val, 1));
    @include generateHeaderHeight(nth($_val, 3), nth($_val, 1));
    @include generateFontSize(nth($_val, 4), nth($_val, 1));
}

@each $_val in $defines-pm {
    @each $_valname in $defines-pmname {
        @include generateMarginPadding($_valname, nth($_val, 1), nth($_val, 2));
    }
}

@each $_val in $defines_color {
    .txt-#{nth($_val, 1)} {
        color: nth($_val, 2);
    }
    .bg-#{nth($_val, 1)} {
        background-color: nth($_val, 2);
    }
    .tag-#{nth($_val, 1)} {
        background-color: nth($_val, 2);
        padding: 2px 4px;
        border-radius: 4px;
        color: white;
    }
    .cl-#{nth($_val, 1)} {
        color: nth($_val, 2);
    }
    .b-#{nth($_val, 1)} {
        border-color: nth($_val, 2);
        border-style: solid;
        border-width: 0;
    }
}

@import '../../common/common.scss';
@import '../../admin/admin.scss';
@import '../../account/acc.scss';
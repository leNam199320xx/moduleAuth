@import 'input.scss';
@import 'button.scss';
@import 'form.scss';
@import 'icons.scss';
@import 'variables.scss';
@import 'nav/navfixed.scss';
@import 'nav/footer.scss';
@import 'grid.scss';
@import 'scrollbar.scss';
@mixin generateSizeWidth ($size, $name) {
    .w-#{$name} {
        max-width: $size;
        width: 100%;
    }
}

@mixin generatePosition ($position) {
    .ps-#{$position} {
        position: $position;
    }
}

@mixin generateHeaderHeight ($height, $name) {
    .header-#{$name} {
        height: $height;
    }
}

@mixin generateFontSize($fs, $name) {
    .fs-#{$name} {
        font-size: $fs;
    }
}

@mixin generateMarginPadding ($posi, $level, $size) {
    .m#{$posi}-#{$level} {
        @if $posi=="t" {
            margin-left: $size;
        }
        @else if $posi=="l" {
            margin-left: $size;
        }
        @else if $posi=="r" {
            margin-right: $size;
        }
        @else if $posi=="b" {
            margin-bottom: $size;
        }
        @else if $posi=="lr" {
            margin-left: $size;
            margin-right: $size;
        }
        @else if $posi=="tb" {
            margin-top: $size;
            margin-bottom: $size;
        }
        @else {
            margin: $size;
        }
    }
    .p#{$posi}-#{$level} {
        @if $posi=="t" {
            padding-left: $size;
        }
        @else if $posi=="l" {
            padding-left: $size;
        }
        @else if $posi=="r" {
            padding-right: $size;
        }
        @else if $posi=="b" {
            padding-bottom: $size;
        }
        @else if $posi=="lr" {
            padding-left: $size;
            padding-right: $size;
        }
        @else if $posi=="tb" {
            padding-top: $size;
            padding-bottom: $size;
        }
        @else {
            padding: $size;
        }
    }
    .b#{$posi}-#{$level} {
        @if $posi=="t" {
            border-left-width: $level + px !important;
        }
        @else if $posi=="l" {
            border-left-width: $level + px !important;
        }
        @else if $posi=="r" {
            border-right-width: $level + px !important;
        }
        @else if $posi=="b" {
            border-bottom-width: $level + px !important;
        }
        @else if $posi=="lr" {
            border-left-width: $level + px !important;
            border-right-width: $level + px !important;
        }
        @else if $posi=="tb" {
            border-top-width: $level + px !important;
            border-bottom-width: $level + px !important;
        }
        @else {
            border-width: $level + px !important;
        }
    }
}

@mixin btnSize($fs, $name) {
    .btn-#{$name} {
        font-size: $fs;
    }
}

@mixin btnColor($hostcl, $subcl, $name) {
    .btn-#{$name} {
        background-color: $cl;
        color: $subcl;
    }
    .btn-outline-#{$name} {
        color: $cl;
        border: solid 2px $cl;
        background-color: $subcl;
    }
}

@include generateSizeWidth(100%, "full");
@include generateSizeWidth(50%, "50");
@include generateSizeWidth(25%, "25");
@include generateSizeWidth(12.5%, "125");
@include generateSizeWidth(600px, "600");
@include generateSizeWidth(500px, "500");
@include generateSizeWidth(400px, "400");
@include generateSizeWidth(300px, "300");
@include generatePosition(fixed);
@include generatePosition(absolute);
@include generatePosition(relative);
@each $_val in $defines {
    @include generateSizeWidth(nth($_val, 2), nth($_val, 1));
    @include generateHeaderHeight(nth($_val, 3), nth($_val, 1));
    @include generateFontSize(nth($_val, 4), nth($_val, 1));
}

@each $_val in $defines-pm {
    @each $_valname in $defines-pmname {
        @include generateMarginPadding($_valname, nth($_val, 1), nth($_val, 2));
    }
}

@each $_val in $defines_color {
    .txt-#{nth($_val, 1)} {
        color: nth($_val, 2);
    }
    .bg-#{nth($_val, 1)} {
        background-color: nth($_val, 2);
    }
    .cl-#{nth($_val, 1)} {
        color: nth($_val, 2);
    }
    .b-#{nth($_val, 1)} {
        border-color: nth($_val, 2);
        border-style: solid;
        border-width: 0;
    }
}

.txt-center {
    text-align: center;
}

.txt-r {
    text-align: right;
}

.txt-l {
    text-align: left;
}

.txt-bold {
    font-weight: bold;
}

.txt-italic {
    font-style: italic;
}

.btn {
    text-align: center;
}

.center {
    margin-left: auto;
    margin-right: auto;
}

.row {
    width: 100%;
}

.image {
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
}

.link {
    text-decoration: none;
    color: inherit;
}

.block {
    display: block;
}

.iblock {
    display: inline-block;
}

.flex {
    display: flex;
    justify-content: center;
}

.flex-right {
    display: flex;
    justify-content: flex-end;
}

.flex-left {
    display: flex;
    justify-content: flex-start;
}

.float-right {
    float: right;
}

.float-left {
    float: left;
}

.h-full {
    height: 100%;
}

.h-full-64 {
    height: calc(100% - 64px);
}

.h-64 {
    height: 64px;
}

.h-600 {
    height: 600px;
}